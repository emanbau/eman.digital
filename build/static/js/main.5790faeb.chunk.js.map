{"version":3,"sources":["assets/eman.png","components/ThreeGrainFilter.tsx","components/ThreeImage.tsx","pages/Home.tsx","pages/About.tsx","pages/Work.tsx","components/LoadingScreen.tsx","App.tsx","index.tsx"],"names":["ThreeGrainFilter","React","memo","zIndex","threeGrainFilterRef","useRef","useEffect","scene","camera","renderer","directionalLight","ambientLight","composer","renderPass","customPass","frameId","counter","mount","current","animate","timer","Date","now","position","x","Math","cos","z","sin","lookAt","THREE","uniforms","value","window","requestAnimationFrame","render","innerWidth","innerHeight","y","alpha","setClearColor","opacity","setSize","outputEncoding","appendChild","domElement","castShadow","set","add","EffectComposer","RenderPass","addPass","grainEffect","vertexShader","fragmentShader","ShaderPass","renderToScreen","init","cancelAnimationFrame","removeChild","remove","ref","className","ThreeImage","threeRef","geometry","texture","material","mesh","uMouse","onMouseMove","e","clientX","clientY","PI","atan","antialias","TextureLoader","load","EmanImage","map","myEffect","addEventListener","removeEventListener","dispose","Fragment","Home","loading","workRef","aboutRef","contactRef","yearRef","headerOneRef","headerTwoRef","headerThreeRef","gsap","from","delay","ease","duration","to","About","Work","LoadingScreen","loadingHandle","useState","percent","setPercent","headerRef","percentRef","setTimeout","App","setLoading","useCallback","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5790faeb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eman.fcb170c2.png\";","import React, { ReactElement, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { AmbientLight, DirectionalLight, PerspectiveCamera, Scene, WebGLRenderer } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport '../App.scss';\n\ninterface Props {\n    zIndex: string;\n}\n\nconst ThreeGrainFilter = React.memo(function ThreeGrainFilter({ zIndex }: Props): ReactElement {\n    const threeGrainFilterRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const mount = threeGrainFilterRef.current;\n        let scene: Scene, camera: PerspectiveCamera, renderer: WebGLRenderer; \n        // let material: MeshLambertMaterial, geometry: SphereBufferGeometry;\n        // let cube: Mesh, cube1: Mesh, cube2: Mesh, cube3: Mesh;\n        let directionalLight: DirectionalLight, ambientLight: AmbientLight;\n        let composer: EffectComposer, renderPass: RenderPass, customPass: ShaderPass;\n        let frameId: any;\n        let counter: number;\n\n        function init(): void {\n            scene = new THREE.Scene();\n            camera = new THREE.PerspectiveCamera(40, window.innerWidth/window.innerHeight, 0.1, 1000);\n            camera.position.y = 6;\n            renderer = new THREE.WebGLRenderer({alpha: true});\n            const setClearColor = (zIndex === 'z-index-4') ? 0xeaeaea : 0x000000\n            const opacity = (zIndex === 'z-index-4') ? 1 : 0.7\n            renderer.setClearColor(setClearColor, opacity);\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.outputEncoding = THREE.sRGBEncoding;\n            mount?.appendChild(renderer.domElement);\n\n            // material = new THREE.MeshLambertMaterial({color: 0x00ff00});\n            // geometry = new THREE.SphereBufferGeometry(0.6, 16, 16);\n            // cube = new THREE.Mesh(geometry, material);\n            // cube.position.set(1, 0.5, 1);\n            // cube1 = new THREE.Mesh(geometry, material);\n            // cube1.position.set(-1, 0.5, 1);\n            // cube2 = new THREE.Mesh(geometry, material);\n            // cube2.position.set(1, 0.5, -1);\n            // cube3 = new THREE.Mesh(geometry, material);\n            // cube3.position.set(-1, 0.5, -1);\n\n            // scene.add(cube);\n            // scene.add(cube1);\n            // scene.add(cube2);\n            // scene.add(cube3);\n\n            ambientLight = new THREE.AmbientLight(0x666666);\n            directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n            directionalLight.castShadow = false;\n            directionalLight.position.set(-2, 4, -2);\n            // directionalLight.target = cube;\n\n            scene.add(directionalLight);\n            scene.add(ambientLight);\n\n            // Post Processing\n            composer = new EffectComposer(renderer);\n            renderPass = new RenderPass(scene, camera);\n            composer.addPass(renderPass);\n            counter = 0.0;\n\n            const grainEffect = {\n                uniforms: {\n                    \"tDiffuse\": {value: null},\n                    \"amount\": {value: counter}\n                },\n\n                vertexShader: `\n                    varying vec2 vUv;\n                    void main() {\n                        vUv = uv;\n                        gl_Position = projectionMatrix \n                        * modelViewMatrix \n                        * vec4( position, 1.0 );\n                    }`,\n                fragmentShader: `\n                    uniform float amount;\n                    uniform sampler2D tDiffuse;\n                    varying vec2 vUv;\n                    \n                    float random( vec2 p )\n                    {\n                    vec2 K1 = vec2(\n                        23.14069263277926, // e^pi (Gelfond's constant)\n                        2.665144142690225 // 2^sqrt(2) (Gelfond–Schneider constant)\n                    );\n                    return fract( cos( dot(p,K1) ) * 12345.6789 );\n                    }\n                    \n                    void main() {\n                    vec4 color = texture2D( tDiffuse, vUv );\n                    vec2 uvRandom = vUv;\n                    uvRandom.y *= random(vec2(uvRandom.y,amount));\n                    color.rgb += random(uvRandom)*0.15;\n                    gl_FragColor = vec4( color );\n                    }`\n            }\n\n            customPass = new ShaderPass(grainEffect);\n            customPass.renderToScreen = true;\n            composer.addPass(customPass);\n        }\n\n            // Animate Function\n        function animate(): void {\n            var timer = Date.now() * 0.0002;\n            camera.position.x = Math.cos(timer) * 10;\n            camera.position.z = Math.sin(timer) * 10;\n            camera.lookAt(new THREE.Vector3(0,1,0));\n\n            counter += 0.01\n            customPass.uniforms[\"amount\"].value = counter;\n\n            frameId = window.requestAnimationFrame(animate);\n            composer.render();\n        }\n\n        // Start Three.js Function\n        function start(): void {\n            if (!frameId) {\n                frameId = requestAnimationFrame(animate)\n            }\n        }\n\n        // Stop Function for Cleanup\n        function stop(): void {\n            cancelAnimationFrame(frameId);\n            frameId = null;\n        }\n\n        start();\n        init();\n        animate();\n\n        return() => {\n            stop();\n            mount?.removeChild( renderer.domElement );\n            scene.remove(directionalLight);\n            scene.remove(ambientLight);\n            // scene.remove(cube);\n            // scene.remove(cube1);\n            // scene.remove(cube2);\n            // scene.remove(cube3);\n            // geometry.dispose();\n            // material.dispose();\n        }\n    })\n\n    return (\n        <div ref={threeGrainFilterRef} className={`three-grain-filter ${zIndex}`} />\n    )\n})\n\nexport default ThreeGrainFilter","import React, { ReactElement, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { TextureLoader, Vector2 } from 'three';\nimport '../pages/Home.scss';\nimport EmanImage from '../assets/eman.png';\nimport ThreeGrainFilter from '../components/ThreeGrainFilter';\n\nconst ThreeImage = React.memo(function ThreeImage(): ReactElement {\n    const threeRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n\n        // Initializations\n        let mount = threeRef.current;\n        let camera: any, scene: any, renderer: any, geometry: any, texture: any, material: any, mesh: any, frameId: any;\n        let composer: EffectComposer, renderPass: RenderPass, customPass: ShaderPass;\n        let uMouse: Vector2 = new THREE.Vector2(0, 0);\n\n        // Three.js Initial Function\n        function init(): void {\n            scene = new THREE.Scene();\n            camera = new THREE.PerspectiveCamera( 2 * (180/Math.PI) * Math.atan(6 / (2 * 0.5)), 3/5 , 0.01, 10 );\n            camera.position.z = 0.5;\n\n            renderer = new THREE.WebGL1Renderer({alpha: true, antialias: true});\n            renderer.setSize( 420, 700 );\n            renderer.setClearColor(0x1d1d1d, 1);\n            renderer.outputEncoding = THREE.sRGBEncoding;\n\n            mount?.appendChild( renderer.domElement );\n        \n            geometry = new THREE.PlaneBufferGeometry(3, 5);\n            texture = new TextureLoader().load( EmanImage );\n            material = new THREE.MeshBasicMaterial( { map: texture } );\n            mesh = new THREE.Mesh( geometry, material);\n            scene.add( mesh );\n\n            // Post Processing for Effect\n            composer = new EffectComposer(renderer);\n            renderPass = new RenderPass(scene, camera);\n            composer.addPass(renderPass);\n\n            const myEffect = {\n                uniforms: {\n                    \"tDiffuse\": { value: null },\n                    \"resolution\": { value: new THREE.Vector2(1.,window.innerHeight/window.innerWidth) },\n                    \"uMouse\": { value: new THREE.Vector2(-10,-10) },\n                    \"uVelo\": { value: 0 },\n                },\n                vertexShader: `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );}`,\n                fragmentShader: `uniform float time;\n                uniform sampler2D tDiffuse;\n                uniform vec2 resolution;\n                varying vec2 vUv;\n                uniform vec2 uMouse;\n                float circle(vec2 uv, vec2 disc_center, float disc_radius, float border_size) {\n                    uv -= disc_center;\n                    uv*=resolution;\n                    float dist = sqrt(dot(uv, uv));\n                    return smoothstep(disc_radius+border_size, disc_radius-border_size, dist);\n                }\n                void main()  {\n                    vec2 newUV = vUv;\n                    float c = circle(vUv, uMouse, 0.0, 0.2);\n                    float r = texture2D(tDiffuse, newUV.xy += c * (0.1 * .5)).x;\n                    float g = texture2D(tDiffuse, newUV.xy += c * (0.1 * .525)).y;\n                    float b = texture2D(tDiffuse, newUV.xy += c * (0.1 * .55)).z;\n                    vec4 color = vec4(r, g, b, 1.);\n                    gl_FragColor = color;\n                }`\n            }\n\n            customPass = new ShaderPass(myEffect);\n            customPass.renderToScreen = true;\n            composer.addPass(customPass);\n\n            mount?.addEventListener('mousemove', onMouseMove );\n        }\n\n        // Mouse Move Function\n        function onMouseMove(e: MouseEvent): void {\n            uMouse.x = ( e.clientX / (window.innerWidth));\n            uMouse.y = 1 - ( e.clientY / (window.innerHeight) );\n        }\n\n        // Animate Function\n        function animate(): void {\n            customPass.uniforms.uMouse.value = uMouse;\n            frameId = window.requestAnimationFrame(animate);\n            composer.render();\n        }\n\n        // Start Three.js Function\n        function start(): void {\n            if (!frameId) {\n                frameId = requestAnimationFrame(animate)\n            }\n        }\n\n        // Stop Function for Cleanup\n        function stop(): void {\n            cancelAnimationFrame(frameId);\n            frameId = null;\n        }\n\n        start();\n        init();\n        animate();\n\n        return() => {\n            stop();\n            mount?.removeChild( renderer.domElement );\n            window.removeEventListener( 'mousemove', onMouseMove );\n            scene.remove(mesh);\n            geometry.dispose();\n            material.dispose();\n            texture.dispose();\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <div className=\"three-image\" ref={threeRef} />\n            <ThreeGrainFilter zIndex='z-index-3'/>\n        </React.Fragment>\n    )\n});\n\nexport default ThreeImage\n\n","import { useEffect, useRef, ReactElement } from 'react'\nimport './Home.scss';\nimport ThreeImage from '../components/ThreeImage';\nimport { Link } from 'react-router-dom';\nimport { gsap } from 'gsap';\n\ninterface Props {\n    loading: boolean;\n}\n\nfunction Home ({ loading }: Props): ReactElement {\n\n    const workRef = useRef(null);\n    const aboutRef = useRef(null);\n    const contactRef = useRef<HTMLHeadingElement>(null);\n    const yearRef = useRef<HTMLHeadingElement>(null);\n    const headerOneRef = useRef<HTMLSpanElement>(null);\n    const headerTwoRef = useRef<HTMLSpanElement>(null);\n    const headerThreeRef = useRef<HTMLSpanElement>(null);\n\n    useEffect(() => {\n        gsap.from([headerOneRef.current, headerTwoRef.current, headerThreeRef.current], {\n            delay: 5,\n            opacity: 0,\n            ease: \"sine.out\",\n            y: 90,\n            duration: 1.5,\n        });\n\n        gsap.from(workRef.current, {delay: 5, opacity: 0, ease: \"sine.out\", x: -90, duration: 1.5});\n        gsap.from(aboutRef.current, {delay: 5, opacity: 0, ease: \"sine.out\", x: 90, duration: 1.5});\n        gsap.from(contactRef.current, {delay: 5, opacity: 0, ease: \"sine.out\", x: -90, duration: 1.5});\n        gsap.from(yearRef.current, {delay: 5, opacity: 0, ease: \"sine.out\", x: 90, duration: 1.5});\n\n    }, [workRef, aboutRef, contactRef, yearRef, headerOneRef, headerTwoRef, headerThreeRef]);\n\n    return (\n        <div className=\"home-container-dark\">\n            <Link to=\"/work\" className=\"work-nav\" ref={workRef}>WORK</Link>\n            <Link to=\"/about\" className=\"about-nav\" ref={aboutRef}>ABOUT</Link>\n            <h1 className=\"contact-nav\" ref={contactRef}>CONTACT</h1>\n            <h1 className=\"blog-nav\" ref={yearRef}>©2021</h1>\n            <ThreeImage />\n            <h1 className=\"header\">\n                <span ref={headerOneRef}>DEVELOPER</span>\n                <br/>\n                <span ref={headerTwoRef}>DESIGNER</span>\n                <br/>\n                <span ref={headerThreeRef}>STUDENT.</span>\n            </h1>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { ReactElement } from 'react'\n\nfunction About(): ReactElement {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default About\n","import React, { ReactElement } from 'react'\n\n\nfunction Work(): ReactElement {\n    return (\n        <div>\n            Hello!\n        </div>\n    )\n}\n\nexport default Work\n\n","import { ReactElement, Fragment, useEffect, useState, useRef } from 'react'\nimport ThreeGrainFilter from '../components/ThreeGrainFilter';\nimport '../App.scss';\nimport gsap from 'gsap';\n\ninterface Props {\n    loadingHandle: () => void;\n    loading: boolean;\n}\n\nfunction LoadingScreen({ loadingHandle, loading }: Props): ReactElement {\n\n    const [percent, setPercent] = useState<number>(0);\n\n    const headerRef = useRef(null);\n    const percentRef = useRef(null);\n    const headerTwoRef = useRef(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (percent < 100) {\n                setPercent(percent + 1);\n            } else {\n                loadingHandle();\n                gsap.to([headerRef.current, percentRef.current, headerTwoRef.current], {\n                    opacity: 0,\n                });\n            }\n        }, 30);\n    }, [percent, loadingHandle, headerRef, percentRef, headerTwoRef])\n\n    return (\n        <Fragment>\n            <ThreeGrainFilter zIndex='z-index-4' />\n            <h1 className='loading-header' ref={headerRef}>Eman Bautista</h1>\n            <h1 className='percent' ref={percentRef}>{percent}%</h1>\n            <h1 className=\"loading-header-two\" ref={headerTwoRef}>Selected Works</h1>\n        </Fragment>\n    )\n}\n\nexport default LoadingScreen;\n","import { useState, useCallback } from 'react';\nimport './App.scss';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Work from './pages/Work';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LoadingScreen from './components/LoadingScreen';\n\nfunction App() {\n\n  // Loading State\n  const [loading, setLoading] = useState<boolean>(true);\n  // Change Loading State\n  const loadingHandle = useCallback(() => {\n    setLoading(false);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className={loading ? 'loading' : 'loading false'}>\n        <LoadingScreen loading={loading} loadingHandle={loadingHandle} />\n      </div>\n      <Router>\n        <Switch>\n          <Route exact path='/' >\n            <Home loading={loading} />\n          </Route>\n          <Route path='/about' component={About} />\n          <Route path='/work' component={Work} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}